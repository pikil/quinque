import{t as w,a as _,s as q}from"./CIrY-q_u.js";import"./DGbO4kKx.js";import{c as s,s as l,r as n,g as x,t as B}from"./BpJTbl1z.js";import{s as o,c as i,e as C,i as H,I as O}from"./Dp40FZ_9.js";const R="M0,23 L20,23 L20,43 L0,43 Z@@fill-rule:evenodd;&&M23,46 L43,46 L43,66 L23,66 Z&&@@fill-rule:evenodd;&&M46,23 L66,23 L66,43 L46,43 Z@@fill-rule:evenodd;&&M23,23 L43,23 L43,43 L23,43 Z@@fill-rule:evenodd;&&M23,0 L43,0 L43,20 L23,20 Z@@fill-rule:evenodd;|0 0 66 66",A="M23,23 L43,23 L43,43 L23,43 Z@@fill-rule:evenodd;|0 0 66 66",V="M0,46 L20,46 L20,66 L0,66 Z@@fill-rule:evenodd;&&M46,46 L66,46 L66,66 L46,66 Z@@fill-rule:evenodd;&&M46,0 L66,0 L66,20 L46,20 Z@@fill-rule:evenodd;&&M23,23 L43,23 L43,43 L23,43 Z@@fill-rule:evenodd;&&M0,0 L20,0 L20,20 L0,20 Z@@fill-rule:evenodd;|0 0 66 66",W="M0,0 L20,0 L20,20 L0,20 Z@@fill-rule:evenodd;&&M92,92 L112,92 L112,112 L92,112 Z@@fill-rule:evenodd;&&M69,69 L89,69 L89,89 L69,89 Z@@fill-rule:evenodd;&&M46,46 L66,46 L66,66 L46,66 Z@@fill-rule:evenodd;&&M23,23 L43,23 L43,43 L23,43 Z@@fill-rule:evenodd;|0 0 112 112",Y="M92,0 L112,0 L112,20 L92,20 Z@@fill-rule:evenodd;&&M0,92 L20,92 L20,112 L0,112 Z@@fill-rule:evenodd;&&M23,69 L43,69 L43,89 L23,89 Z@@fill-rule:evenodd;&&M46,46 L66,46 L66,66 L46,66 Z@@fill-rule:evenodd;&&M69,23 L89,23 L89,43 L69,43 Z@@fill-rule:evenodd;|0 0 112 112",G="M0,0 L20,0 L20,20 L0,20 Z@@fill-rule:evenodd;&&M23,0 L43,0 L43,20 L23,20 Z@@fill-rule:evenodd;&&M46,0 L66,0 L66,20 L46,20 Z@@fill-rule:evenodd;&&M69,0 L89,0 L89,20 L69,20 Z@@fill-rule:evenodd;&&M92,0 L112,0 L112,20 L92,20 Z@@fill-rule:evenodd;|0 0 112 25",J="M0,0 L20,0 L20,20 L0,20 Z@@fill-rule:evenodd;&&M0,23 L20,23 L20,43 L0,43 Z@@fill-rule:evenodd;&&M0,46 L20,46 L20,66 L0,66 Z@@fill-rule:evenodd;&&M0,69 L20,69 L20,89 L0,89 Z@@fill-rule:evenodd;&&M0,92 L20,92 L20,112 L0,112 Z@@fill-rule:evenodd;|0 0 25 112";var K=w("<li><!> </li>"),N=w(`<div class="px-4"><ul class="list-disc pl-6"><li>You and your opponent have to fill the grid with your colour;</li> <li>Set your colour on the grid by tapping the square without a colour;</li> <li>The game takes places in turns: First player, then Second player, then First player again and so on;</li> <li>Each turn follows a specific pattern for filling blocks on the grid;</li> <li>The patterns are: <ul></ul></li> <li>Single block selection always starts the game;</li> <li>Each turn (except the very first one) receives the pattern randomly, but players always know the current and the next two patterns (look above the score);</li> <li>Every coloured block is worth 5 points. However, 1 point is deducted if it has horizontally adjacent block(s) (left or right or both) and 1 is deducted if it has vertically adjacent block(s) (top or bottom or both). So, the actual score of a single block could be 3, 4 or 5 points.</li> <li><p>Score examples:</p> <ul class="pl-6 list-[circle]"><li>Three blocks in a line: 4 + 4 + 4 = 12 points,</li> <li>Three blocks forming a corner: 4 + 3 + 4 = 11 points,</li> <li>Four blocks in a 2x2 square: 3 + 3 + 3 + 3 = 12 points</li></ul></li> <li>Once a block is placed, it becomes inactive and it will add up 3, 4 or 5 points (depending on it's neighbours) to the total colour's score at the end of the game;</li> <li>When a coloured block is placed, it can change the colour of adjacent blocks if it's positioned next to a block of the same colour on both sides, effectively 'flipping' them.</li> <li>The game ends when there are no free blocks left on the grid;</li> <li>The player with the highest number of points wins.</li> <li>Enjoy the game and good luck outsmarting the opponent!</li></ul></div>`);function $(I){const e="py-2",j="h-4 w-4 text-color2",D=[{icon:A,score:"5 points (One block, no adjacent ones)",pattern:"1 single block selection"},{icon:R,score:"15 points (4 have got adjacents in a single axis and 1 has got adjacents in both)",pattern:"5 blocks selection in axes"},{icon:V,score:25,pattern:"5 blocks selection in diagonals"},{icon:Y,score:25,pattern:"5 blocks selection in a rising diagonal"},{icon:W,score:25,pattern:"5 blocks selection in a falling diagonal"},{icon:G,score:20,pattern:"5 blocks selection in horizontal axis"},{icon:J,score:20,pattern:"5 blocks selection in vertical axis"}];var r=N(),c=s(r),d=s(c);o(d,i(e));var L=l(d,2);o(L,i(e));var u=l(L,2);o(u,i(e));var v=l(u,2);o(v,i(e));var t=l(v,2);o(t,i(e));var p=l(s(t));C(p,5,()=>D,H,(T,k)=>{let E=()=>x(k).icon,F=()=>x(k).pattern;var a=K();o(a,i(e));var y=s(a);O(y,{get name(){return E()},class:j});var z=l(y);n(a),B(()=>q(z,`  ${F()??""};`)),_(T,a)}),n(p),n(t);var f=l(t,2);o(f,i(e));var h=l(f,2);o(h,i(e));var g=l(h,2);o(g,i(e));var b=l(g,4);o(b,i(e));var M=l(b,2);o(M,i(e));var Z=l(M,2);o(Z,i(e));var m=l(Z,2);o(m,i(e));var S=l(m,2);o(S,i(e)),n(c),n(r),_(I,r)}export{$ as R,J as a,G as b,A as c,W as d,Y as e,V as f,R as g};
